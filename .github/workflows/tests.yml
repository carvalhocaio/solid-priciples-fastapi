name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          .venv
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        uv sync --extra test

    - name: Run linting
      run: |
        uv run ruff check .

    - name: Run unit tests
      run: |
        uv run pytest tests/unit -v -m unit --cov=app --cov-report=xml --cov-report=term

    - name: Run integration tests
      run: |
        uv run pytest tests/integration -v -m integration --cov=app --cov-append --cov-report=xml --cov-report=term

    - name: Run E2E tests
      run: |
        uv run pytest tests/e2e -v -m e2e --cov=app --cov-append --cov-report=xml --cov-report=term

    - name: Run all tests with coverage
      run: |
        uv run pytest --cov=app --cov-report=xml --cov-report=term --cov-report=html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Archive coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/

    - name: Check coverage threshold
      run: |
        uv run pytest --cov=app --cov-fail-under=80 --cov-report=term
